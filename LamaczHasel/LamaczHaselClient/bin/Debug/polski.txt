#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <errno.h>
#include <unistd.h>
#include <ctype.h>
#include <signal.h>
 
#define LISTENQ 1024
#define MAXLINE 4096
 
char buforOdebrany[MAXLINE];
char buforWyslany[100];
FILE *file;
 
int wykonajDzialanie()
{
     	file = fopen("plik.txt", "w");
	if(file != NULL){
		int k;
		for(k=strlen(buforOdebrany)-1; k>=0; k--){
			fprintf(file,"%c",buforOdebrany[k]);
		}  
		fclose(file);
		//buforWyslany[] = "ZapisanoDoPliku\0";
		strcpy(buforWyslany,"Zapisano do pliku wpisany ciag znakow w odwrotnej kolejnosci\0");
	} else 
		printf("err file");
	return 0;
}
 
int main()
{
        int sockfd, connfd;
       
        struct sockaddr_in serveraddr, clientaddr;
        if((sockfd = socket(AF_INET,SOCK_STREAM,0))<0)
		printf("err socket\n");

        bzero(&serveraddr,sizeof(serveraddr));
        serveraddr.sin_family = AF_INET;
        serveraddr.sin_addr.s_addr = htonl(INADDR_ANY);
        serveraddr.sin_port = htons(4000);
        bind(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr));
 
        for(;;)
        {
                listen(sockfd, LISTENQ);
                printf("Czekam\n");
                int client = sizeof(clientaddr);
                char str[INET_ADDRSTRLEN];
                int n;
 
                connfd = accept(sockfd,(struct sockaddr*)&clientaddr,&client);
                	printf("Klient sie pod³aczyl\n");
                inet_ntop(AF_INET,&clientaddr.sin_addr.s_addr,str,INET_ADDRSTRLEN);
                
                char host[1024];
                gethostname(host, 1024);
                write(connfd, host, sizeof(host));
 
                if(n=read(connfd,buforOdebrany,1024)<0)
			printf ("err read\n");
                                
                printf("Odebrano: %s\n", buforOdebrany);
                
                wykonajDzialanie();

                if(write(connfd,buforWyslany,sizeof(buforWyslany))<0)
            		printf("err write");

		printf("%i\n",sizeof(buforWyslany));
                
                printf("Odeslano: %s\n", buforWyslany);
                close(connfd);
                printf("Polaczenie zakonczone\n");
        }
        return 0;
}


    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <netinet/in.h>
    #include <arpa/inet.h>
    #include <errno.h>
    #include <unistd.h>
     
    #define LISTENQ 1024
    #define MAXLINE 4096
     
    char buforWysylany[MAXLINE];
    char buforOdbierany[MAXLINE];
     
    int main()
    {
            int sockfd, n;
            struct sockaddr_in serveraddr;
     
            if((sockfd=socket(AF_INET,SOCK_STREAM,0))<0)
            	printf("err socket\n");
     
            bzero(&serveraddr,sizeof(serveraddr));
     
            serveraddr.sin_family = AF_INET;
            serveraddr.sin_port = htons(4000);
            inet_aton("127.0.0.1", &serveraddr.sin_addr);
            if(connect(sockfd,(struct sockaddr*)&serveraddr,sizeof(serveraddr))<0)
            	printf("err connect");
     
            char host[1024];
            int k;
     
            if(k=read(sockfd, host, 1024)<0)
            	printf("err read");
           
            puts("Podaj ciag znakow");
            scanf("%s", buforWysylany);
     
            printf("Wprowadzony ciag znakow to: %s\n", buforWysylany);
            if(write(sockfd,buforWysylany,sizeof(buforWysylany))<0)
            	printf("err write");
     
            if(n=read(sockfd,buforOdbierany,MAXLINE)<0)
            	printf("err read");
           
                                   
            printf("Odebrano: %s\n", buforOdbierany);
     
            exit(0);
            return 0;
    }